<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CheckSheetMapper">
    <resultMap type="CheckSheet" id="checkSheetResultMap">
        <id column="id" property="id"/>
        <result column="classify" property="classify"/>
        <result column="name" property="name"/>
        <result column="price" property="price"/>
        <result column="description" property="description"/>
        <result column="min" property="min"/>
        <result column="max" property="max"/>
        <result column="echart_type" property="echartType"/>
        <result column="second_echart_type" property="secondEchartType"/>
        <result column="score_expression" property="scoreExpression"/>
        <result column="render_expression" property="renderExpression"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user_id" property="updateUserId"/>
        <result column="update_time" property="updateTime"/>
        <result column="price" property="price"/>
    </resultMap>

	<update id="updateExtremityPriceById" parameterType="Map">
		update check_sheet set price = NULL where id = #{id}
	</update>
	
	<update id="updatePriceById" parameterType="Map">
		update check_sheet set price = #{price} where id = #{id}
	</update>

    <!-- 新增-->
    <insert id="save" parameterType="CheckSheet" useGeneratedKeys="true" keyProperty="id">
        insert into check_sheet(
        classify,
        name,
        price,
        description,
        min,
        max,
        echart_type,
        second_echart_type,
        score_expression,
        render_expression,
        create_user_id,
        create_time
        ) values (
        #{classify},
        #{name},
        #{price},
        #{description},
        #{min},
        #{max},
        #{echartType},
        #{secondEchartType},
        #{scoreExpression},
        #{renderExpression},
        #{createUserId},
        #{createTime}
        )
    </insert>

    <!-- 删除-->
    <delete id="delete" parameterType="java.lang.Long">
        delete from check_sheet
        where
        id = #{value}
    </delete>

    <!-- 删除-->
    <delete id="deleteLogicalBatch" parameterType="java.lang.Long">
        delete from check_sheet
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 修改 -->
    <update id="update" parameterType="CheckSheet">
        update check_sheet
        set
        <if test="classify!= null">
            classify = #{classify},
        </if>
        <if test="name != null and name != ''">
            name = #{name},
        </if>
        <if test="price != null">
            price = #{price},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        min = #{min},
        max = #{max},
        price = #{price},
        <if test="echartType != null">
            echart_type = #{echartType},
        </if>
        <if test="secondEchartType != null">
            second_echart_type = #{secondEchartType},
        </if>
        score_expression = #{scoreExpression},
        render_expression = #{renderExpression},
        id = id
        where
        id = #{id}
    </update>

    <!-- 通过id获取数据 -->
    <select id="findById" parameterType="java.lang.Long" resultMap="checkSheetResultMap">
        select * from
        check_sheet
        where
        id = #{value}
    </select>

    <!-- 条件查询 -->
    <select id="findByCondition" parameterType="CheckSheet" resultMap="checkSheetResultMap">
        select * from
        check_sheet where 1=1
        <if test="createUserId != null and createUserId != ''">
            and create_user_id = #{createUserId}
        </if>
        <if test="name != null and name != ''">
            and name = #{name}
        </if>
        <if test="price != null">
            and price = #{price}
        </if>
        <if test="description != null and description != ''">
            and description = #{description}
        </if>
        <if test="min != null and min != ''">
            and min = #{min}
        </if>
        <if test="max != null and max != ''">
            and max = #{max}
        </if>
        <if test="echartType!= null and echartType != ''">
            and echart_type = #{echartType}
        </if>
        <if test="scoreExpression != null and scoreExpression != ''">
            and score_expression = #{scoreExpression}
        </if>
        <if test="renderExpression != null and renderExpression != ''">
            and render_expression = #{renderExpression}
        </if>
        <if test="classify!= null and classify!= ''">
            and classify = #{classify}
        </if>
        
    </select>

    <!-- 列表 -->
    <select id="datalistPage" parameterType="page" resultMap="checkSheetResultMap">
        select * from
        check_sheet a where 1=1
        <if test="pd.query_time_start != null and pd.query_time_start!=''"><!-- 时间检索 -->
            and a.create_time &gt;= #{pd.query_time_start}
        </if>
        <if test="pd.query_time_end!=null and pd.query_time_end != ''"><!-- 时间检索 -->
            and a.create_time &lt;= #{pd.query_time_end}
        </if>
        <if test="pd.name != null and pd.name != ''"><!-- 关键字检索 -->
            and a.name like concat('%',#{pd.name},'%')
        </if>
        <if test="pd.query_key_echartTypeName != null and pd.query_key_echartTypeName != ''"><!-- query_key_echartTypeName -->
            and a.echart_type like concat('%',#{pd.query_key_echartTypeName},'%')
        </if>
        <if test="pd.classify!= null and pd.classify!= ''"><!-- 关键字检索 -->
            and a.classify =#{pd.classify}
        </if>
        order by a.create_time desc
    </select>

    <!-- 列表(全部) -->
    <select id="listAll" parameterType="String" resultMap="checkSheetResultMap">
        select * from check_sheet a
    </select>

    <!-- 批量删除 -->
    <delete id="deleteBatch" parameterType="String">
        delete from check_sheet
        where
        id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--查找用户体检体检表列表-->
    <select id="findPackageSheets" parameterType="map" resultType="pd">
        SELECT
        cs.id AS sheetId,
        cs.name AS sheetName,
        cs.description AS sheetDescription,
        CASE
        WHEN EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageId}) 
        THEN 1
        WHEN
        NOT EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageId})
        AND EXISTS (SELECT 1 FROM patient_check_question_option WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageId})
        THEN 2
        WHEN
        NOT EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageId})
        AND NOT EXISTS (SELECT 1 FROM patient_check_question_option WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageId})
        THEN 0
        ELSE -1 END AS checkStatus,
        h.name AS hospitalName,
        pi.check_card_num AS cardNum,
        DATE_FORMAT(CASE pi.check_card_type WHEN 1 THEN ce.active_time ELSE cv.active_time END,"%Y-%m-%d") AS activeTime
        FROM check_sheet cs
        LEFT JOIN patient_item pi ON pi.id=#{patientItemId}
        LEFT JOIN hospital h ON h.id=pi.hospital_id
        LEFT JOIN card_virtual cv ON (pi.check_card_type=2 AND pi.check_card_num=cv.num)
        LEFT JOIN card_entity ce ON (pi.check_card_type=1 AND pi.check_card_num=ce.num)
        WHERE cs.id IN (
        SELECT sheet_id FROM check_package_sheet_asso WHERE package_id = #{packageId}
        )
    </select>
    
    <!--查找用户体检体检表列表-->
    <select id="findPackageMixSheets" parameterType="map" resultType="pd">
        SELECT
        cs.id AS sheetId,
        cs.name AS sheetName,
        cs.description AS sheetDescription,
        CASE
        WHEN EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageMixId}) 
        THEN 1
        WHEN
        NOT EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageMixId})
        AND EXISTS (SELECT 1 FROM patient_check_question_option WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageMixId})
        THEN 2
        WHEN
        NOT EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageMixId})
        AND NOT EXISTS (SELECT 1 FROM patient_check_question_option WHERE patient_item_id=#{patientItemId} AND check_sheet_id=cs.id AND package_id = #{packageMixId})
        THEN 0
        ELSE -1 END AS checkStatus,
        h.name AS hospitalName,
        pi.check_card_num AS cardNum,
        DATE_FORMAT(CASE pi.check_card_type WHEN 1 THEN ce.active_time ELSE cv.active_time END,"%Y-%m-%d") AS activeTime
        FROM check_sheet cs
        LEFT JOIN patient_item pi ON pi.id=#{patientItemId}
        LEFT JOIN hospital h ON h.id=pi.hospital_id
        LEFT JOIN card_virtual cv ON (pi.check_card_type=2 AND pi.check_card_num=cv.num)
        LEFT JOIN card_entity ce ON (pi.check_card_type=1 AND pi.check_card_num=ce.num)
        WHERE cs.id IN 
        <if test="packageId!= null">
            (SELECT sheet_id FROM check_package_sheet_asso WHERE package_id = #{packageId} )
        </if>
        <if test="sheetIdList!= null">
            <foreach item="item" index="index" collection="sheetIdList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        
       
    </select>

    <!--根据套餐id查询体检表列表-->
    <select id="findSheetListByPackageId" parameterType="Long" resultMap="checkSheetResultMap">
        SELECT * FROM check_sheet WHERE id in(SELECT sheet_id FROM check_package_sheet_asso  WHERE package_id=#{value})
    </select>

    <!--查询所有量表，以及是否包含在指定套餐中-->
    <select id="listWithPackageInfo" parameterType="long" resultType="map">
        SELECT
        a.id AS sheetId,
        a.name AS sheetName,
        a.classify,
        a.id IN (SELECT sheet_id FROM check_package_sheet_asso WHERE package_id=#{value}) AS isSelected
        FROM check_sheet a
    </select>

    <!--根据选项id查询量表信息-->
    <select id="findSheetByOptionId" parameterType="long" resultMap="checkSheetResultMap">
        SELECT a.*
        FROM check_sheet a
        WHERE a.id IN (
        SELECT sheet_id FROM check_sheet_question_asso WHERE question_id=(SELECT question_id FROM check_question_option WHERE id=#{value})
        )
        limit 0,1
    </select>

    <!--用户查询量表信息，包含是否已检测，上一次做到哪一题-->
    <select id="findPatientSheetInfo" parameterType="map" resultType="map">
        SELECT
        a.id,
        a.name,
        EXISTS (SELECT 1 FROM patient_check_report_item WHERE patient_item_id=#{patientItemId} AND package_id = #{packageId} AND check_sheet_id=a.id) AS isFinished,
        ifnull(
        (
        SELECT max(temp2.question_seq)
        FROM
        (
            SELECT question_id
            FROM patient_check_question_option
            WHERE patient_item_id=#{patientItemId} AND check_sheet_id=#{sheetId} AND package_id = #{packageId}
            GROUP BY question_id
        ) temp1
        ,check_sheet_question_asso temp2
        WHERE temp1.question_id=temp2.question_id AND temp2.sheet_id=#{sheetId}
        ),
        1)-1 AS markSeq
        FROM check_sheet a
        WHERE a.id=#{sheetId}
    </select>
    
    <!-- 二期新增 -->
    <!--查询所有套餐所有量表 -->
    <select id="listByPackageId" parameterType="long" resultType="com.blue.pem.api.entity.CheckSheetVO">
        SELECT
        a.id AS sheetId,
        a.name AS name
        <!-- a.id IN (SELECT sheet_id FROM check_package_mix_sheet_asso WHERE package_id=#{value}) AS isSelected -->
        FROM check_sheet a 
        inner join  check_package_sheet_asso ps 
        on ps.sheet_id = a.id  
        WHERE ps.package_id=#{value}
    </select>
    
    <!--查询所有不在医院套餐中的量表，以及该量表是否被选中 -->
    <select id="listNotInHospitalPackage" parameterType="long" resultType="com.blue.pem.api.entity.CheckSheetVO">
        SELECT
        a.id AS sheetId,
        a.name AS name
        <!-- a.id IN (
             SELECT sheet_id FROM check_package_mix_sheet_asso 
             WHERE package_mix_id = #{packageMixId}
             ) AS isSelected -->
        FROM check_sheet a 
        WHERE a.id not in (
           select sheet_id 
           from check_package_sheet_asso ps 
           left join check_package p 
           on ps.package_id = p.id 
           where p.hospital_id = #{hospitalId})
    </select>
    
    <!--查询所有不在套餐中的量表，以及该量表是否被选中 -->
    <select id="listNotInOfficePackage" parameterType="long" resultType="com.blue.pem.api.entity.CheckSheetVO">
        SELECT
        a.id AS sheetId,
        a.name AS name
        <!-- a.id IN (
             SELECT sheet_id FROM check_package_mix_sheet_asso 
             WHERE package_mix_id = #{packageMixId}
             ) AS isSelected -->
        FROM check_sheet a 
        WHERE a.id not in (
           select sheet_id 
           from check_package_sheet_asso ps 
           left join check_package p 
           on ps.package_id = p.id 
           where p.office_id = #{officeId})
    </select>
    
    <!--根据批次id查询体检表列表-->
    <select id="listByReport" parameterType="com.blue.pem.api.entity.ReportSearchConditionDO" resultMap="checkSheetResultMap">
        SELECT * FROM check_sheet s
        RIGHT JOIN check_package_mix_sheet_asso a ON s.id = a.sheet_id 
        RIGHT JOIN check_package_mix m ON a.package_mix_id = m.id   
        LEFT JOIN hospital_group_team t ON m.group_team_id = t.id 
        WHERE m.batch_id = #{batchId} 
        <if test="departmentId != null ">
            and t.department_id = #{departmentId}
        </if>
        <if test="teamId != null ">
            and m.group_team_id = #{teamId}
        </if>
    </select>
    
    <!--获取套餐下的量表idList-->
    <select id="getSheetIdListByPackageId" parameterType="long" resultType="long">
        SELECT a.sheet_id FROM check_package_sheet_asso a  
        WHERE a.package_id = #{packageId} 
    </select>
    <!--获取混合套餐下的量表idList-->
    <select id="getSheetIdListByPackageMixId" parameterType="long" resultType="long">
        SELECT a.sheet_id FROM check_package_mix_sheet_asso a  
        WHERE a.package_mix_id = #{packageMixId} 
    </select>
    
    <!--查询app端所有量表，以及是否包含在指定套餐中，只返回定价的量表-->
    <select id="listForAppPackage" parameterType="pd" resultType="pd">
        SELECT
        a.id AS sheetId,
        a.name AS sheetName,
        a.price price 
        <if test="packageId != null  and packageId != ''">
        , a.id IN (
             SELECT c.sheet_id FROM check_package_sheet_asso c
             WHERE c.package_id = #{packageId}
             ) AS isSelected
        </if>
        
        <!-- <if test="packageId == null ">
        , 0 AS isSelected
        </if> -->
        FROM check_sheet a 
        where a.price is not null 
        <if test="keyword != null ">
        and a.name like concat('%', #{keyword}, '%')
        </if>
        <if test="classifyId != null and classifyId != ''">
        and a.classify = #{classifyId}
        </if>
        <!-- <if test="packageId != null ">
        and a.id not in (SELECT sheet_id FROM check_package_sheet_asso WHERE package_id=#{packageId}) 
        </if> -->
    </select>
</mapper>
















