<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CheckPackageSheetAssoMapper">
	<resultMap type="CheckPackageSheetAsso" id="checkPackageSheetAssoResultMap">
		<id column="id" property="id"/>
		<result column="package_id" property="packageId"/>
		<result column="sheet_id" property="sheetId"/>
		<result column="seq" property="seq"/>
		<result column="create_user_id" property="createUserId"/>
		<result column="create_time" property="createTime"/>
		<result column="update_user_id" property="updateUserId"/>
		<result column="update_time" property="updateTime"/>
	</resultMap>
	
	<!-- 新增-->
	<insert id="save" parameterType="CheckPackageSheetAsso" useGeneratedKeys="true" keyProperty="id">
		insert into check_package_sheet_asso(
			package_id,
			sheet_id,
			seq,
			create_user_id,
			create_time
		) values (
			#{packageId},
			#{sheetId},
			#{seq},
			#{createUserId},
			#{createTime}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="java.lang.Long">
		delete from check_package_sheet_asso
		where 
			id = #{value}
	</delete>

	<!-- 修改 -->
	<update id="update" parameterType="CheckPackageSheetAsso">
		update check_package_sheet_asso
			set 
			<if test="packageId != null">
				package_id = #{packageId},
			</if>
			<if test="sheetId != null">
				sheet_id = #{sheetId},
			</if>
			<if test="seq != null">
				seq = #{seq},
			</if>
			id = id
			where 
				id = #{id}
	</update>
	
	
	<!-- 通过id获取数据 -->
	<select id="findById" parameterType="java.lang.Long" resultMap="checkPackageSheetAssoResultMap">
		select * from 
			check_package_sheet_asso
		where 
			id = #{value}
	</select>
	
	<!-- 条件查询 -->
	<select id="findByCondition" parameterType="CheckPackageSheetAsso" resultMap="checkPackageSheetAssoResultMap">
		select * from 
			check_package_sheet_asso where 1=1
			<if test="createUserId != null and createUserId != ''">
				and create_user_id = #{createUserId}
			</if>
			<if test="packageId != null">
				and package_id = #{packageId}
			</if>
			<if test="sheetId != null">
				and sheet_id = #{sheetId}
			</if>
			<if test="seq != null">
				and seq = #{seq}
			</if>
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultMap="checkPackageSheetAssoResultMap">
		select * from 
				check_package_sheet_asso a where 1=1
		<if test="pd.query_time_start != null and pd.query_time_start!=''"><!-- 时间检索 -->
			and a.create_time &gt;= #{pd.query_time_start}
		</if>
		<if test="pd.query_time_end!=null and pd.query_time_end != ''"><!-- 时间检索 -->
			and a.create_time &lt;= #{pd.query_time_end}
		</if>
		order by a.create_time desc	
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="String" resultMap="checkPackageSheetAssoResultMap">
		select * from check_package_sheet_asso a
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteBatch" parameterType="String">
		delete from check_package_sheet_asso
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>

    <!--查询套餐下所有量表-->
    <select id="findCheckSheetsByPackageId" parameterType="long" resultType="map">
        SELECT
        b.id AS sheetId,
        b.name AS sheetName
        FROM check_package_sheet_asso a
        LEFT JOIN check_sheet b ON a.sheet_id=b.id
        WHERE a.package_id=#{value}
    </select>

    <!--删除某套餐所有关联信息-->
    <select id="deleteAllByPackageId" parameterType="long">
        DELETE FROM check_package_sheet_asso WHERE package_id=#{value}
    </select>

    <!--批量保存-->
    <insert id="batchSave" parameterType="list">
        insert into check_package_sheet_asso(
            package_id,
            sheet_id,
            seq,
            create_user_id,
            create_time
        )
        values
        <foreach collection ="list" item="item" index= "index" separator =",">
            (
            #{item.packageId},
            #{item.sheetId},
            #{item.seq},
            #{item.createUserId},
            #{item.createTime}
            )
        </foreach>
    </insert>
</mapper>